{"mappings":";;AAAA;;;;;;;;CAQC,GAED;AAmBA,OAAO,SAAS,GAAG,OAAO,SAAS,IAAI,EAAE;AAEzC,MAAM,oCAAc,WAAY;IAC5B,IACI,OAAO,OAAO,IACd,OAAO,OAAO,CAAC,MAAM,IACrB,OAAO,OAAO,CAAC,MAAM,CAAC,mBAAmB,IACzC,OAAO,OAAO,CAAC,MAAM,CAAC,mBAAmB,CAAC,UAAU,IACpD,OAAO,OAAO,CAAC,MAAM,CAAC,mBAAmB,CAAC,UAAU,CAAC,UAAU,CAAC,QAEhE,OAAO,IAAI;IAEf,OAAO,KAAK;AAChB;AAEA,MAAM,qCAAe,WAAY;IAC7B,IAAI,OAAO,OAAO,IAAI,OAAO,OAAO,CAAC,MAAM,IAAI,OAAO,OAAO,CAAC,MAAM,CAAC,oBAAoB,EACrF,OAAO,IAAI;IAEf,OAAO,KAAK;AAChB;AAEA,MAAM,8BAAQ,SAAU,GAAW,EAAE,QAAgB,EAAE;IACnD,OAAO,CAAE,CAAA,KAAK,KAAK,CAAC,CAAE,CAAA,IAAI,OAAO,CAAC,YAAY,OAAO,QAAO,KAAM,OAAO,QAAO;AACpF;AAEA,MAAM,sCAAgB,SAAS,aAAa;AAE5C,MAAM,uCAAiB,SAAU,MAAsD,EAAE;IACrF,MAAM,aAAa,qCAAe,WAAW,CAAC;IAE9C,MAAM,kBAAsC,WAAW,eAAe;IACtE,MAAM,eAAe,WAAW,iBAAiB,IAAI;IACrD,MAAM,sBAAsB,OAAO,WAAW,mBAAmB,KAAK;IAEtE,MAAM,gBAAgB,WAAW,aAAa,IAAI;IAClD,MAAM,cAAc,CAAC,EAAE,aAAa,EAAE,OAAO,IAAI,CAAC,CAAC;IACnD,MAAM,aAAa,mBAAmB,IAAI;IAC1C,MAAM,aACF,OAAO,IAAI,KAAK,QACV,4BAAM,OAAO,KAAK,GAAG,MAAM,uBAC3B,4BAAM,OAAO,KAAK,EAAE,oBAAoB;IAElD,MAAM,WAAW,OAAO,EAAE,IAAI,OAAO,IAAI,IAAK,CAAA,CAAC,GAAG,OAAoB,OAAO,SAAS,CAAC,IAAI,CAAC,KAAI;IAEhG,MAAM,QAAQ,WAAW;IACzB,MAAM,WAAW,CAAC,SAAiB,OAAmB;QAClD,IAAI,OACA,QAAQ,GAAG,CAAC,CAAC,sCAAsC,EAAE,QAAQ,CAAC,EAAE;IAExE;IAEA,SAAS,cAAc;IAEvB,IAAI,qCAAe;QACf,qGAAqG;QACrG,6GAA6G;QAC7G,MAAM,MAAM;2BACR;yBACA;wBACA;wBACA;YACA,gBAAgB,IAAI;YACpB,WAAW;QACf;QACA,SAAS,QAAQ,SAAS;QAC1B,SAAS,iBAAiB;IAC9B,OAAO,IAAI,sCAAgB;QACvB,oGAAoG;QACpG,MAAM,MAAM;YACR,gBAAgB;YAChB,cAAc;YACd,aAAa;YACb,OAAO;YACP,iBAAiB,IAAI;YACrB,WAAW;QACf;QACA,SAAS,SAAS,aAAa;QAC/B,SAAS,kBAAkB;IAC/B,CAAC;AACL;AAEA,uBAAgB;AAChB,uBAAgB;AAChB,uBAAgB;AAChB,uBAAgB;AAChB,wBAAiB","sources":["src/index.ts"],"sourcesContent":["/**!\n * Core Web Vitals in Google Analytics for Shopify\n * https://github.com/RenderBetter/web-vitals-google-analytics-shopify\n *\n * Copyright (c) Render Better.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport * as webVitals from 'web-vitals';\nimport type {Metric} from 'web-vitals';\n\ntype GoogleAnalyticsFunction = (...args: unknown[]) => void;\n\ndeclare const window: Window & {\n    ga?: GoogleAnalyticsFunction;\n    gtag?: GoogleAnalyticsFunction;\n    trekkie?: {\n        config: {\n            'Google Analytics': {\n                trackingId: string;\n            };\n            'Google Gtag Pixel': {};\n        };\n    };\n    dataLayer: [unknown[]];\n};\n\nwindow.dataLayer = window.dataLayer || [];\n\nconst isUAEnabled = function () {\n    if (\n        window.trekkie &&\n        window.trekkie.config &&\n        window.trekkie.config['Google Analytics'] &&\n        window.trekkie.config['Google Analytics'].trackingId &&\n        window.trekkie.config['Google Analytics'].trackingId.startsWith('UA-')\n    ) {\n        return true;\n    }\n    return false;\n};\n\nconst isGA4Enabled = function () {\n    if (window.trekkie && window.trekkie.config && window.trekkie.config['Google Gtag Pixel']) {\n        return true;\n    }\n    return false;\n};\n\nconst round = function (num: number, decimals: number) {\n    return +(Math.round(+(num.toFixed(decimals) + 'e+' + decimals)) + 'e-' + decimals);\n};\n\nconst currentScript = document.currentScript as HTMLScriptElement;\n\nconst sendMetricToGa = function (metric: {name: Metric['name']; value: Metric['value']}) {\n    const attributes = currentScript?.dataset || {};\n\n    const shopifyTemplate: string | undefined = attributes.shopifyTemplate;\n    const actionPrefix = attributes.eventActionPrefix || 'Web Performance: ';\n    const metricDecimalPlaces = Number(attributes.metricDecimalPlaces) || 3;\n\n    const eventCategory = attributes.eventCategory || 'Web Performance';\n    const eventAction = `${actionPrefix}${metric.name}`;\n    const eventLabel = shopifyTemplate || null;\n    const eventValue =\n        metric.name !== 'CLS'\n            ? round(metric.value / 1000, metricDecimalPlaces)\n            : round(metric.value, metricDecimalPlaces);\n\n    const sendToGa = window.ga || window.gtag || ((...args: unknown[]) => window.dataLayer.push(args));\n\n    const debug = 'debug' in attributes;\n    const debugLog = (message: string, data?: unknown) => {\n        if (debug) {\n            console.log(`[web-vitals-google-analytics-shopify] ${message}`, data);\n        }\n    };\n\n    debugLog('Collecting', metric);\n\n    if (isUAEnabled()) {\n        // UA data collection model: https://support.google.com/analytics/answer/11091422#universal-analytics\n        // event fields: https://developers.google.com/analytics/devguides/collection/analyticsjs/events#event_fields\n        const evt = {\n            eventCategory,\n            eventAction, // LCP, CLS, FID, etc.\n            eventLabel,\n            eventValue,\n            nonInteraction: true,\n            transport: 'beacon',\n        };\n        sendToGa('send', 'event', evt);\n        debugLog('Sent UA event', evt);\n    } else if (isGA4Enabled()) {\n        // GA 4 events: https://developers.google.com/analytics/devguides/migration/ua/analyticsjs-to-gtagjs\n        const evt = {\n            event_category: eventCategory,\n            event_action: eventAction,\n            event_label: eventLabel,\n            value: eventValue,\n            non_interaction: true,\n            transport: 'beacon',\n        };\n        sendToGa('event', eventAction, evt);\n        debugLog('Sent GA4 event', evt);\n    }\n};\n\nwebVitals.onLCP(sendMetricToGa);\nwebVitals.onCLS(sendMetricToGa);\nwebVitals.onFID(sendMetricToGa);\nwebVitals.onINP(sendMetricToGa);\nwebVitals.onTTFB(sendMetricToGa);\n\nexport {};\n"],"names":[],"version":3,"file":"web-vitals-google-analytics-shopify.cjs.js.map","sourceRoot":"../"}